#!/usr/bin/env node

'use strict';

// Set process title
process.title = 'nengine';

var nengine, // Nengine module
    fs = require('fs'), // Internal libs
    path = require('path'),
    basedir = process.cwd(),
    help = require('../lib/help'),
    options = require('../lib/cli').options; // Especially badass external libs

// Do stuff based on CLI options.
if (options.version) {
    // Display version
    help.version();
} else if (options.configfile) {
    // Note: if both `configfile` and `root` are set, use `configfile` dirname
    basedir = path.dirname(options.configfile);
} else if (options.root) {
    basedir = options.root;
}

/**
 * normalize
 * @param path
 * @returns {string}
 */
function normalize(path){
    var sepRE = /\\/g;

    // Replace \ to /
    return path.replace(sepRE, '/');
}

/**
 * resolve
 * @param moudule
 * @param root
 * @returns {*}
 */
function resolve(moudule, root){
    var main, pkg, i,
        fspath, fsname;

    root = path.join(root, 'node_modules');

    // if root exists recurse root
    if (fs.existsSync(root)) {
        fsname = fs.readdirSync(root);
        i = fsname.length - 1;

        // Recurse directory
        for (; i >= 0; i--) {
            fspath = path.join(root, fsname[i]);

            // Read package.json
            try {
                pkg = require(path.join(fspath, 'package.json'));
                // Find moudule package.json
                if (pkg.name === moudule) {
                    main = path.join(fspath, pkg.main || 'index');

                    // Is module main exists
                    if (fs.existsSync(main) || fs.existsSync(main + '.js')) {
                        return normalize(main);
                    }
                }
            } catch (e) {
                // Failed to parse package.json
            }

            // Recurse directory
            resolve(moudule, fspath);
        }
    }

    return null;
}

// Run local nengine
try {
    // Find local nengine and require local nengine and run it
    require(resolve('nengine', basedir)).cli();
} catch (e) {
    // Not find local nengine
    // Show version info, exit process
    options.version && process.exit();
    // Show help info
    options.help && help.help();
    // Show fatal info
    help.fatal('Unable to find local nengine under the root directory', 99);
}
